{"version":3,"sources":["serviceWorker.ts","components/NavBar/NavBar.tsx","components/NavBar/index.js","components/Header/Header.tsx","components/Header/index.js","components/LoadingSpinner/LoadingSpinner.tsx","components/LoadingSpinner/index.js","services/singletonService.ts","hooks/useSingletons.ts","components/Error/Error.tsx","components/Error/index.js","util/contentBuilder.ts","components/Dynamic/Dynamic.tsx","components/Dynamic/index.js","containers/Home/Home.tsx","containers/Home/index.js","services/galleryService.ts","hooks/useGalleries.ts","containers/Gallery/Gallery.tsx","containers/Gallery/index.js","index.tsx"],"names":["Boolean","window","location","hostname","match","NavBar","useState","showMobileNav","setShowMobileNav","transparent","setTransparent","toggleMobileMenu","useEffect","onscroll","scrollY","navContent","navLinks","map","link","hashLink","key","uri","smooth","to","label","external","href","target","rel","id","className","onClick","aria-hidden","src","alt","Header","title","subTitle","linkText","compact","cx","override","css","LoadingSpinner","size","color","loading","instance","axios","create","baseURL","config","backendurl","getSingleton","identifier","request","url","method","headers","Accept","useSingletons","identifiers","isLoading","setIsLoading","hasError","setHasError","singletons","setSingletons","a","Promise","all","data","reduce","obj","item","Object","assign","fetchSingletons","Error","buildContent","c","prefix","component","React","createElement","settings","class","children","child","index","tag","text","buildHeader","Markup","content","buildMarkup","buildComponent","Dynamic","Home","about","events","getGalleries","useGalleries","galleries","setGalleries","entries","fetchGalleries","Gallery","g","description","galleryClasses","files","pictures","path","thumbnails","App","exact","render","document","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5b64d47.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\n\nimport navLinks from '../../config/nav_links.json';\n\nfunction NavBar() {\n  const [showMobileNav, setShowMobileNav] = useState(false);\n  const [transparent, setTransparent] = useState(true);\n\n  const toggleMobileMenu = () => {\n    setShowMobileNav(!showMobileNav);\n  };\n\n  useEffect(() => {\n    window.onscroll = () => {\n      if (!transparent && window.scrollY < 40) {\n        setTransparent(true);\n      } else if (transparent && window.scrollY > 40) {\n        setTransparent(false);\n      }\n    };\n  });\n\n  const navContent = navLinks.map((link) => {\n    if (link.hashLink) {\n      return (\n        <HashLink key={link.uri} smooth to={link.uri}>\n          {link.label}\n        </HashLink>\n      );\n    }\n\n    if (link.external) {\n      return (\n        <a\n          key={link.uri}\n          href={link.uri}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {link.label}\n        </a>\n      );\n    }\n\n    return (\n      <Link key={link.uri} to={link.uri}>\n        {link.label}\n      </Link>\n    );\n  });\n\n  return (\n    <>\n      <nav\n        id=\"nav-mobile\"\n        className={transparent ? 'navTransparent' : 'navWhite'}\n      >\n        <div className=\"nav-header\" id=\"nav-mobile-header\">\n          <div\n            className=\"burger\"\n            onClick={() => toggleMobileMenu()}\n            id=\"burger\"\n          >\n            <i className=\"icon icon-menu icon--s5\" aria-hidden=\"true\" />\n          </div>\n        </div>\n        <div\n          className={showMobileNav ? 'nav-content active' : 'nav-content'}\n          id=\"mobile-content\"\n          onClick={() => toggleMobileMenu()}\n        >\n          <Link to=\"/\">\n            <img src=\"/img/logo_home.png\" alt=\"Helvetic Speedrunners Logo\" />\n          </Link>\n          {navContent}\n        </div>\n      </nav>\n      <nav\n        id=\"nav-desktop\"\n        className={transparent ? 'navTransparent' : 'navWhite'}\n      >\n        <Link to=\"/\">\n          <img src=\"/img/logo_home.png\" alt=\"Helvetic Speedrunners Logo\" />\n        </Link>\n        {navContent}\n      </nav>\n    </>\n  );\n}\n\nexport default NavBar;\n","import NavBar from './NavBar';\nexport default NavBar;\n","//@flow\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { HashLink } from 'react-router-hash-link';\n\ntype Props = {\n  title: string;\n  subTitle: string;\n  link?: string;\n  linkText?: string;\n  compact?: boolean;\n};\n\nfunction Header({ title, subTitle, link, linkText, compact }: Props) {\n  return (\n    <header className={cx(compact ? 'header--content' : 'header--home')}>\n      <div className=\"row\">\n        {title && <h1>{title}</h1>}\n        {subTitle && <h2>{subTitle}</h2>}\n        {link && (\n          <HashLink smooth to={`${link}`}>\n            <div className=\"button button-ghost\">{linkText}</div>\n          </HashLink>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\nexport default Header;\n","import React from 'react';\nimport DotLoader from 'react-spinners/DotLoader';\nimport { css } from '@emotion/core';\n\nconst override = css`\n  display: inline-block;\n  margin: auto;\n  max-width: 100%;\n`;\n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"spinner--blocker\">\n      <div className=\"spinner--container\">\n        <DotLoader\n          css={override}\n          size={100} // or 150px\n          color={'#a10000'}\n          loading={true}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default LoadingSpinner;\n","import LoadingSpinner from './LoadingSpinner';\nexport default LoadingSpinner;\n","import axios, { AxiosResponse, AxiosInstance } from 'axios';\nimport config from '../config/config.json';\n\ntype Headers = {\n  [headerName: string]: string | void;\n};\n\nconst getDefaultHeaders = (): Headers => ({\n  Accept: 'application/json',\n});\n\nconst instance: AxiosInstance = axios.create({\n  baseURL: `${config.backendurl}/singletons/get/`,\n});\n\nexport type SingletonComponentSettings = {\n  id: string;\n  class: string;\n  style: string;\n  tag?: string;\n  text?: string;\n};\n\nexport type SingletonComponent = {\n  component: string;\n  settings: SingletonComponentSettings;\n  children?: Array<SingletonComponent>;\n};\n\nexport type Singleton = {\n  title: string;\n  content: Array<SingletonComponent>;\n};\n\nexport function getSingleton(\n  identifier: string\n): Promise<AxiosResponse<Singleton>> {\n  return instance.request<Singleton>({\n    url: identifier,\n    method: 'GET',\n    headers: getDefaultHeaders(),\n  });\n}\n","import { useState, useEffect } from 'react';\nimport { getSingleton, Singleton } from '../services/singletonService';\n\nfunction useSingletons(identifiers: Array<string>) {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hasError, setHasError] = useState<boolean>(false);\n  const [singletons, setSingletons] = useState<{\n    [key: string]: Singleton;\n  } | null>(null);\n\n  useEffect(() => {\n    async function fetchSingletons() {\n      try {\n        setIsLoading(true);\n\n        const data = (\n          await Promise.all(\n            identifiers.map(async (id) => ({\n              id: id,\n              data: (await getSingleton(id)).data,\n            }))\n          )\n        ).reduce(\n          (obj, item) => Object.assign(obj, { [item.id]: item.data }),\n          {}\n        );\n\n        setSingletons(data);\n        setIsLoading(false);\n      } catch (err) {\n        setHasError(true);\n        setIsLoading(false);\n\n        return false;\n      }\n    }\n\n    if (!isLoading && !hasError && !singletons) fetchSingletons();\n  }, [identifiers, hasError, isLoading, singletons]);\n\n  return { isLoading, singletons, hasError };\n}\n\nexport default useSingletons;\n","import React from 'react';\n\nfunction Error() {\n  return <div>Something went wrong..</div>;\n}\n\nexport default Error;\n","import Error from './Error';\nexport default Error;\n","import React from 'react';\nimport { Markup } from 'interweave';\nimport { SingletonComponent } from '../services/singletonService';\nimport cx from 'classnames';\n\nfunction buildContent(\n  c: SingletonComponent,\n  prefix: number | string\n): React.ReactElement | null {\n  if (c.component === 'section') {\n    return React.createElement(\n      'section',\n      {\n        key: prefix,\n        id: c.settings.id,\n        className: cx(c.settings.class, 'ib'),\n      },\n      c.children?.map((child, index) =>\n        buildComponent(child, `${prefix}_${index}`)\n      )\n    );\n  }\n\n  return null;\n}\n\nfunction buildComponent(\n  c: SingletonComponent,\n  key: number | string\n): React.ReactElement | null {\n  switch (c.component) {\n    case 'heading':\n      return buildHeader(c, key);\n    case 'text':\n      return buildMarkup(c, key);\n  }\n\n  return null;\n}\n\nfunction buildHeader(\n  c: SingletonComponent,\n  key: number | string\n): React.ReactElement | null {\n  if (c.settings.tag) {\n    return React.createElement(\n      c.settings.tag,\n      { key, id: c.settings.id, className: c.settings.class },\n      c.settings.text\n    );\n  }\n\n  return null;\n}\n\nfunction buildMarkup(\n  c: SingletonComponent,\n  key: number | string\n): React.ReactElement | null {\n  return React.createElement(Markup, {\n    key,\n    content: c.settings.text,\n  });\n}\n\nexport default buildContent;\n","import React from 'react';\nimport { SingletonComponent } from '../../services/singletonService';\nimport buildContent from '../../util/contentBuilder';\n\ntype Props = {\n  content: SingletonComponent;\n  identifier: number | string;\n};\n\nfunction Dynamic({ content, identifier }: Props) {\n  return <>{buildContent(content, identifier)}</>;\n}\n\nexport default Dynamic;\n","import Dynamic from './Dynamic';\n\nexport default Dynamic;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport { Markup } from 'interweave';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport useSingletons from '../../hooks/useSingletons';\nimport { SingletonComponent } from '../../services/singletonService';\nimport Error from '../../components/Error';\nimport Dynamic from '../../components/Dynamic';\n\nfunction Home() {\n  const { isLoading, singletons, hasError } = useSingletons([\n    'about',\n    'events',\n  ]);\n\n  return (\n    <div>\n      <Header\n        title=\"Helvetic Speedrunners\"\n        subTitle=\"The Swiss Speedrunning Community\"\n        link=\"/#events\"\n        linkText=\"View our events\"\n      />\n      <div>\n        <div className=\"row\">{isLoading && <LoadingSpinner />}</div>\n        {!isLoading && singletons && (\n          <>\n            <div className=\"row\">\n              <h2>\n                <Markup content={singletons.about.title} />\n              </h2>\n              {singletons.about.content?.map(\n                (c: SingletonComponent, index: number) => (\n                  <Dynamic key={index} identifier={index} content={c} />\n                )\n              )}\n            </div>\n            <div className=\"row\">\n              <h2>\n                <Markup content={singletons.events.title} />\n              </h2>\n              {singletons.events.content?.map(\n                (c: SingletonComponent, index: number) => (\n                  <Dynamic key={index} identifier={index} content={c} />\n                )\n              )}\n            </div>\n          </>\n        )}\n        {!isLoading && hasError && <Error />}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import Home from './Home';\nexport default Home;\n","import axios, { AxiosResponse, AxiosInstance } from 'axios';\nimport config from '../config/config.json';\n\ntype Headers = {\n  [headerName: string]: string | void;\n};\n\nconst getDefaultHeaders = (): Headers => ({\n  Accept: 'application/json',\n});\n\nconst instance: AxiosInstance = axios.create({\n  baseURL: `${config.backendurl}/collections/get/galleries`,\n});\n\nexport type GalleryResponse = {\n  entries: Array<Gallery>;\n};\n\nexport type Gallery = {\n  title: string;\n  description: string;\n  pictures: Array<{ meta: Object; path: string }>;\n};\n\nexport function getGalleries(): Promise<AxiosResponse<GalleryResponse>> {\n  return instance.request<GalleryResponse>({\n    url: '/',\n    method: 'GET',\n    headers: getDefaultHeaders(),\n  });\n}\n","import { useState, useEffect } from 'react';\nimport { getGalleries, Gallery } from '../services/galleryService';\n\nfunction useGalleries() {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hasError, setHasError] = useState<boolean>(false);\n  const [galleries, setGalleries] = useState<Array<Gallery> | null>(null);\n\n  useEffect(() => {\n    async function fetchGalleries() {\n      try {\n        setIsLoading(true);\n\n        const { data } = await getGalleries();\n\n        setGalleries(data.entries);\n        setIsLoading(false);\n      } catch (err) {\n        setHasError(true);\n        setIsLoading(false);\n\n        return false;\n      }\n    }\n\n    if (!isLoading && !hasError && !galleries) fetchGalleries();\n  });\n\n  return { isLoading, galleries, hasError };\n}\n\nexport default useGalleries;\n","//@flow\n\nimport React from 'react';\nimport Header from '../../components/Header';\nimport { Markup } from 'interweave';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport Error from '../../components/Error';\nimport useGalleries from '../../hooks/useGalleries';\n\n//@ts-ignore\n//tslint:disable-next-line\nimport Lightbox from 'lightbox-alex-react';\n\nfunction Gallery() {\n  const { isLoading, galleries, hasError } = useGalleries();\n\n  return (\n    <div>\n      <Header compact={true} title=\"Helvetic Speedrunners\" subTitle=\"Gallery\" />\n      <div>\n        <div className=\"row\">{isLoading && <LoadingSpinner />}</div>\n        {!isLoading &&\n          galleries &&\n          galleries.map((g) => (\n            <div className=\"row\">\n              <h2>\n                <Markup content={g.title} />\n              </h2>\n              <div>\n                <Markup content={g.description} />\n              </div>\n              <Lightbox\n                galleryClasses=\"gallery-wrapper\"\n                files={g.pictures.map(\n                  (c) => 'https://api.speedrun.ch/' + c.path\n                )}\n                thumbnails={g.pictures.map(\n                  (c) => 'https://api.speedrun.ch/' + c.path\n                )}\n              />\n            </div>\n          ))}\n        {!isLoading && hasError && <Error />}\n      </div>\n    </div>\n  );\n}\n\nexport default Gallery;\n","import Gallery from './Gallery';\n\nexport default Gallery;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport NavBar from './components/NavBar';\n\nimport Home from './containers/Home';\nimport Gallery from './containers/Gallery';\n\nimport './styles/main.scss';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <HashRouter>\n        <div>\n          <NavBar />\n          <Switch>\n            <Route\n              exact\n              path=\"/gallery\"\n              render={() => {\n                document.title = 'Helvetic Speedrunners - Gallery';\n                return <Gallery />;\n              }}\n            />\n            <Route\n              path=\"/\"\n              render={() => {\n                document.title = 'Helvetic Speedrunners - Home';\n                return <Home />;\n              }}\n            />\n          </Switch>\n          {/*<Footer />*/}\n        </div>\n      </HashRouter>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}